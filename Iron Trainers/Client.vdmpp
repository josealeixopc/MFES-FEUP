class Client is subclass of User

types

	public Sex = <F> | <M>
		--inv s == s = <F> or s = <M>
		;
	public Date:: 
		day : nat1
		month: nat1
		year : nat
		--inv d == d.month > 0 and d.month <= 12 
			--and d.day > 0 and d.day <= 31
			--and d.year > 1900
			;
		
values
	
instance variables
	gender : Sex;
	weight :  real;
	height : nat;
	birthDate : Date;
	milestone : Milestone;
	
	-- Invariants
	inv weight > 0 and height > 0;

operations

	-- Constructor
	public Client : String * String * String * Sex * real * nat * Date ==> Client
	Client(e, p, n, s, w, h, d) == (
		gender := s;
		weight := w;
		height := h;
		birthDate := d;
		milestone := new Milestone(0.0);
		User(e, p, n);
	)
	pre w > 0 and h > 0;
		
	
	-- get gender
	public getGender : () ==> Sex
	getGender() == return gender;
	
	--get weight
	public getWeight : () ==> real
	getWeight() == return weight;
	
	-- get height
	public getHeight : () ==> real
	getHeight() == return height;
	
	-- set weight
	public setWeight : real ==> ()
	setWeight(w) == weight := w
	pre w > 0;
	
	--set height
	public setHeight : nat ==> ()
	setHeight(h) == height := h
	pre h > 0;
	

functions
-- TODO Define functiones here

traces
-- TODO Define Combinatorial Test Traces here

end Client