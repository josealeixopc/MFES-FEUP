class SetTest is subclass of Test
types
-- TODO Define types here
values
-- TODO Define values here
instance variables

	testLoad: rat := 120.0;
	testTime: nat := 60;
	testRepetitions: nat1 := 5;
	
	testExerciseName : seq of char := "testExerciseName";
	testExerciseDescription : seq of char := "testExerciseDescription";
	testExerciseBodyPart : Exercise`BodyPart := <Arm>;
	
	testExercise : Exercise := new Exercise(testExerciseName, testExerciseDescription, testExerciseBodyPart);
	
	testSeries1 : Series := new Series(testLoad, testRepetitions, testExercise);
	testSeries2 : Series := new Series(testRepetitions, testExercise, testTime);
	testSeries3 : Series := new Series(testLoad + 10.0, testRepetitions + 5, testExercise);
	testSeries4 : Series := new Series(testRepetitions + 10, testExercise, testTime + 20);
	
	s1 : Set := new Set([testSeries1, testSeries2, testSeries3]);

operations

	private testConstructor: () ==> ()
	testConstructor() == 
	(
		assertEquals(s1.existsInSet(testSeries1), true);
		assertEquals(s1.existsInSet(testSeries2), true);
		assertEquals(s1.existsInSet(testSeries3), true);
				
		assertEquals(s1.existsInSet(testSeries4), false);
	);
	
	-- TODO: Get Index (could not understand the function)
	
	private testAddSeries: () ==> ()
	testAddSeries () ==
	(
		s1.addSeries(testSeries4);
		assertEquals(s1.existsInSet(testSeries4), true);
	);
	
	public static run: () ==> ()
 	run() ==
 	(
 		new SetTest().testConstructor();
 		new SetTest().testAddSeries();
 	);

functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end SetTest